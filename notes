watch_plan9 holds our qid-based epoll, watch.go holds a 
regular epoll/inotify with !plan9

 - Spin up styx server
 - build list of services as a type we can query the state
 - build a client type that can augment the state of the 
   service list ie, a client is connected to a particular 
   buffer on a service; actions going back can clear
   the blue status for other connected clients

Options for service management
 1: Implicit service, search and discovery
    - Walk service dir and add items to array. Use array 
      trick to pop items (move item from end, to current
      location; then cut the slice)
    - Can be bitshifted into brokenness possibly, so we'd       have to validate list as well each sweep

 2: Enable a `refresh` mechanism and don't maintain list
    - echo `refresh /mnt/ubqt/ctrl` which causes a sweep of all services
    - `reload services` may be a better name.
    - We could build a notification for `foo started up` 
      or `foo closed unexpectedly` in a fatal handler for
      services.

We don't want to do ip/ipconfig stuff here. It's tempting, but if we want to start both an http and a 9p server, for example, we'll have overlap.
